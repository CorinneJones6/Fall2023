{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red24\green26\blue30;\red255\green255\blue255;\red89\green158\blue96;
\red23\green23\blue26;}
{\*\expandedcolortbl;;\cssrgb\c12157\c13725\c15686;\cssrgb\c100000\c100000\c100000;\csgenericrgb\c34902\c61961\c37647;
\csgenericrgb\c9020\c9020\c10196;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww28600\viewh14700\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0
\f0\fs32 \cf2 \cb3 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Which two binarySearch tests are failing?\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1\cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8259 	}the 2nd binarySearch test and the 3rd binarySearch test are failing \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What are the values of arr and goal passed in to binary search?\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1\cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8259 	}The value of arr: [1,2,3,4,5]\
{\listtext	\uc0\u8259 	}The value of goal: 0\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 For each of the two cases of binarySearch that are failing, which return statements are they executing in error (is it returning true when it should be returning false, or the other way around)?\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1\cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8259 	}For the 2nd binarySearch test, it is returning true when it should be returning false. For the 3rd binarySearch test, it is returning false when it should be returning true. \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is the bug in binarySearch? How do you fix it?\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1\cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8259 	}instead of comparing the goal to the mid, you need to compare the goal to the arr[mid]\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Which loops appear to be inifinite?\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1\cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8259 	}Loop #2 and Loop #4\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 For the loops that you found to be infinite, briefly explain why they are never progressing.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1\cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8259 	}Loop #2 never progresses because it is running an infinite while loop (while b<10, which b is always 0.) \
{\listtext	\uc0\u8259 	}Loop#4 never progresses because f is always bigger than 0. It runs through the loop if f>0, and f is 5, turns to 6, and then gets reset back to 5. \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What does the call to password.split(" ") appear to do? Hint: examine the input value of "password", then examine the items in the "tokens" array returned by the call.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1\cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8259 	}it splits the password into individual chars and store them in a string array (The input string is abc, and then the tokens after splitting are [\'93a\'94, \'93b\'94, \'93c\'94]\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	8	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is the correct password?
\f1\fs26 \cf4 \cb5 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1
\f0\fs32 \cf2 \cb1 {\listtext	\uc0\u8259 	}1, 4, 9, 16, 25\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
}