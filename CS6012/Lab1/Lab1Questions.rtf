{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fmodern\fcharset0 Courier;\f2\fswiss\fcharset0 ArialMT;
\f3\fswiss\fcharset0 Arial-ItalicMT;\f4\fmodern\fcharset0 Courier-Oblique;}
{\colortbl;\red255\green255\blue255;\red24\green26\blue30;\red255\green255\blue255;\red55\green55\blue55;
\red209\green59\blue58;\red174\green176\blue183;\red23\green23\blue26;\red38\green157\blue169;\red185\green101\blue173;
}
{\*\expandedcolortbl;;\cssrgb\c12157\c13725\c15686;\cssrgb\c100000\c100000\c100000;\cssrgb\c27843\c27843\c27843;
\cssrgb\c86275\c32157\c29020;\csgenericrgb\c68235\c69020\c71765;\csgenericrgb\c9020\c9020\c10196;\csgenericrgb\c14902\c61569\c66275;\csgenericrgb\c72549\c39608\c67843;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww14360\viewh14660\viewkind0
\deftab720
\pard\pardeftab720\sa320\partightenfactor0

\f0\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Lab 1 Questions:\
Answer the following questions in a text file(NOT A WORD DOCUMENT!). Add your answer below each question.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Where is the assertEquals method defined? What does it do? Can we use assertEquals for more than just int types? (Hint: Consult the API for JUnit)\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1\cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8259 	}The assertEquals method is defined in the JUnit API. \
{\listtext	\uc0\u8259 	}The assertEquals method is defined the JUnit API as \'93
\f1\fs28 \cf4 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Assertions
\f2 \'a0is a collection of utility methods that support asserting conditions in tests. Unless otherwise noted, a\'a0
\f3\i failed
\f2\i0 \'a0assertion will throw an\'a0{\field{\*\fldinst{HYPERLINK "https://ota4j-team.github.io/opentest4j/docs/1.3.0/api/org/opentest4j/AssertionFailedError.html"}}{\fldrslt 
\f1 \cf5 \strokec5 AssertionFailedError}}\'a0or a subclass thereof.\'94\
\ls1\ilvl1
\f0\fs32 \cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8259 	}Assertion methods compare two objects for equality, so it can compare any type for equality. \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Briefly describe what each of the three tests is checking.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1\cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8259 	}The first test is testing an empty array, the second is testing an array filled with the same numbers, and the third is testing an simple array with positive and negative numbers where it is easy for us to manually know the correct answers. \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Why is our unimplemented findSmallestDiff method passing one of the tests?\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1\cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8259 	}The unimplemented findSmallestDiff had a \'93return 0\'94 statement inside of it, which means it was just always returning 0. Therefore, the allArrayElementsEqual passed because an equal array should return 0. \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Why are we failing the third test? How should our method be modified to correct this?\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1\cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8259 	}It is failing the third test because it isn\'92t taking the absolute values of the difference, and you fix it by taking the absolute value of the difference. \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is the appropriate call to assertEquals for your new test (test 4)?\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1\cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8259 	}
\f4\i\fs26 \cf6 \cb7 assertEquals
\f1\i0 (\cf8 5\cf6 , DiffUtil.
\f4\i findSmallestDiff
\f1\i0 (\cf9 arr4\cf6 ));\
\ls1\ilvl1
\f0\fs32 \cf2 \cb1 {\listtext	\uc0\u8259 	}I copied and pasted it here - this is the call where you put the correct answer and then the array you are wanting to test. \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Provide one more test (test 5) for the findSmallestDiff method. Briefly describe your test and write the call to assertEquals here.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1\cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8259 	}
\f4\i\fs26 \cf6 \cb7 assertEquals
\f1\i0 (-\cf8 1\cf6 , DiffUtil.
\f4\i findSmallestDiff
\f1\i0 (\cf9 arr5\cf6 ));
\f0\fs32 \cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Briefly describe your unit tests for Assignment 1.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1\cf2 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8259 	}I added a test for an array with one item in it, an array of all negative numbers, an array in ascending order from 1 to 10,000, and an array in descending order from 10,000 to 1. \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
}